# SPDX-FileCopyrightText: 2022 Daniel Valcour <fosssweeper@gmail.com>
#
# SPDX-License-Identifier: GPL-3.0-or-later

#
# Copyright (c) 2022 Daniel Valcour
#
# This file is part of FossSweeper.
#
# FossSweeper is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
#
# FossSweeper is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with FossSweeper. If not, see <https://www.gnu.org/licenses/>.
#

#Compile automatic tests and run them, outputting errors

name: Tests
on: [push, workflow_dispatch]
jobs:
  build:
    env:
      CC: "${{ matrix.platform.cc }}"
      CXX: "${{ matrix.platform.cxx }}"
      buildDir: "${{ github.workspace }}\\build"
    runs-on: "${{ matrix.platform.os }}"
    strategy:
      fail-fast: false
      matrix:
        build_type:
          - Release
        platform:
          - {
              Name: Windows VS2019,
              os: windows-2019,
              cc: cl.exe,
              cxx: cl.exe,
              arch: "x64-windows",
            }
          - {
              Name: Linux GCC,
              os: ubuntu-20.04,
              cc: gcc-10,
              cxx: g++-10,
              arch: "x64-linux",
            }
          - {
              Name: Linux Clang,
              os: ubuntu-20.04,
              cc: clang-12,
              cxx: clang++-12,
              arch: "x64-linux",
            }
          - {
              Name: MacOS Clang,
              os: macos-10.15,
              cc: clang,
              cxx: clang++,
              arch: "x64-osx",
            }
    steps:
      - name: "checkout repository"
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: "log CMake version"
        run: "cmake --version"
        shell: bash
      - name: "create build enviornment"
        run: "cmake -E make_directory $GITHUB_WORKSPACE/build"
        shell: bash
        working-directory: "${{ github.workspace }}"
      - name: "install macos packages"
        if: "${{ runner.os == 'macOS'}}"        
        run: |
          softwareupdate --install -a
          brew install ninja
          ninja --version
      - name: "install linux packages"
        if: "${{ runner.os == 'Linux' }}"        
        run: |
          sudo apt-get update
          sudo apt install libxinerama-dev libxcursor-dev xorg-dev libgtk-3-dev ninja-build
          ninja --version
        shell: bash
      - name: "install windows packages"
        if: "${{ runner.os == 'Windows' }}"
       
      - name: "install windows packages"
        if: "${{ runner.os == 'Windows' }}"        
        run: |
          choco install ninja
          ninja --version
        shell: bash
      - name: "generate CMake project"
        run: "cmake -S . -B ./build/ -G Ninja"
        shell: bash
        working-directory: "${{ github.workspace }}"
      - name: "build CMake project"
        run: "cmake --build $GITHUB_WORKSPACE/build --config ${{ matrix.build_type }}"
        shell: bash
        working-directory: "${{github.workspace}}"
      - continue-on-error: true
        name: "run auto tests"
        run: "ctest -C ${{ matrix.build_type }}"
        shell: bash
        working-directory: "${{github.workspace}}/build/modules/test/"
      - name: "JUnit report"
        uses: mikepenz/action-junit-report@v2.4.3
        with:
          fail_on_failure: true
          report_paths: "**/unittests.*.xml"
          require_tests: true
